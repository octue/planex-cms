# Generated by Django 2.2.14 on 2020-07-10 15:28

import django.db.models.deletion
import taggit.managers
import wagtail.core.models
import wagtail.images.models
import wagtail.search.index
from django.conf import settings
from django.db import migrations, models

import cms_core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0003_taggeditem_add_unique_index"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("wagtailcore", "0045_assign_unlock_grouppagepermission"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccreditedImage",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "file",
                    models.ImageField(
                        height_field="height",
                        upload_to=wagtail.images.models.get_upload_to,
                        verbose_name="file",
                        width_field="width",
                    ),
                ),
                ("width", models.IntegerField(editable=False, verbose_name="width")),
                ("height", models.IntegerField(editable=False, verbose_name="height")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="created at")),
                ("focal_point_x", models.PositiveIntegerField(blank=True, null=True)),
                ("focal_point_y", models.PositiveIntegerField(blank=True, null=True)),
                ("focal_point_width", models.PositiveIntegerField(blank=True, null=True)),
                ("focal_point_height", models.PositiveIntegerField(blank=True, null=True)),
                ("file_size", models.PositiveIntegerField(editable=False, null=True)),
                ("file_hash", models.CharField(blank=True, editable=False, max_length=40)),
                ("caption", models.CharField(blank=True, max_length=255)),
                ("accreditation", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "collection",
                    models.ForeignKey(
                        default=wagtail.core.models.get_root_collection_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Collection",
                        verbose_name="collection",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True, help_text=None, through="taggit.TaggedItem", to="taggit.Tag", verbose_name="tags"
                    ),
                ),
                (
                    "uploaded_by_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by user",
                    ),
                ),
            ],
            options={"verbose_name": "Accredited image", "verbose_name_plural": "Accredited images",},
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="ParticlesConfiguration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=50)),
                ("number", models.PositiveSmallIntegerField(default=50)),
                (
                    "shape_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "circle"),
                            (2, "edge"),
                            (3, "triangle"),
                            (4, "polygon"),
                            (5, "star"),
                            (6, "image"),
                        ],
                        default=1,
                    ),
                ),
                ("polygon_sides", models.PositiveSmallIntegerField(default=5)),
                ("size", models.DecimalField(decimal_places=1, default=2.5, max_digits=4)),
                ("size_random", models.BooleanField(default=False)),
                (
                    "colour",
                    cms_core.fields.ColorField(default="ffffff", help_text="Don't include # symbol.", max_length=6),
                ),
                ("opacity", models.DecimalField(decimal_places=1, default=0.9, max_digits=2)),
                ("opacity_random", models.BooleanField(default=False)),
                ("move_speed", models.DecimalField(decimal_places=1, default=2.5, max_digits=2)),
                (
                    "move_direction",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "none"),
                            (2, "top"),
                            (3, "top-right"),
                            (4, "right"),
                            (5, "bottom-right"),
                            (6, "bottom"),
                            (7, "bottom-left"),
                            (8, "left"),
                        ],
                        default=1,
                    ),
                ),
                ("line_linked", models.BooleanField(default=True)),
                (
                    "css_background_colour",
                    cms_core.fields.ColorField(
                        blank=True,
                        help_text="Don't include # symbol. Will be overridden by linear gradient",
                        max_length=6,
                    ),
                ),
                (
                    "css_background_linear_gradient",
                    models.CharField(
                        blank=True,
                        help_text="Enter in the format 'to right, #2b2b2b 0%, #243e3f 28%, #2b2b2b 100%'",
                        max_length=255,
                    ),
                ),
                ("css_background_url", models.URLField(blank=True, max_length=255)),
            ],
            options={"verbose_name": "Particles Configuration", "verbose_name_plural": "Particles Configurations",},
        ),
        migrations.CreateModel(
            name="SocialMediaSettings",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("facebook", models.URLField(blank=True, help_text="Facebook URL", null=True)),
                ("github", models.URLField(blank=True, help_text="GitHub URL", null=True)),
                ("instagram", models.URLField(blank=True, help_text="Instagram URL", null=True)),
                ("linked_in", models.URLField(blank=True, help_text="LinkedIn URL", null=True)),
                ("twitter", models.URLField(blank=True, help_text="Twitter URL", null=True)),
                ("youtube", models.URLField(blank=True, help_text="YouTube Channel URL", null=True)),
                (
                    "site",
                    models.OneToOneField(
                        editable=False, on_delete=django.db.models.deletion.CASCADE, to="wagtailcore.Site"
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="AccreditedDocument",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("file", models.FileField(upload_to="documents", verbose_name="file")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("file_size", models.PositiveIntegerField(editable=False, null=True)),
                ("file_hash", models.CharField(blank=True, editable=False, max_length=40)),
                ("accreditation", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, max_length=400)),
                (
                    "collection",
                    models.ForeignKey(
                        default=wagtail.core.models.get_root_collection_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Collection",
                        verbose_name="collection",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True, help_text=None, through="taggit.TaggedItem", to="taggit.Tag", verbose_name="tags"
                    ),
                ),
                (
                    "uploaded_by_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by user",
                    ),
                ),
            ],
            options={"verbose_name": "Accredited document", "verbose_name_plural": "Accredited documents",},
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="AccreditedRendition",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("filter_spec", models.CharField(db_index=True, max_length=255)),
                (
                    "file",
                    models.ImageField(
                        height_field="height",
                        upload_to=wagtail.images.models.get_rendition_upload_to,
                        width_field="width",
                    ),
                ),
                ("width", models.IntegerField(editable=False)),
                ("height", models.IntegerField(editable=False)),
                ("focal_point_key", models.CharField(blank=True, default="", editable=False, max_length=16)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="renditions",
                        to="cms_core.AccreditedImage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Accredited Image Rendition",
                "verbose_name_plural": "Accredited Image Renditions",
                "unique_together": {("image", "filter_spec", "focal_point_key")},
            },
        ),
    ]
